@page "/CreateCustomer"
@using global::Shared.Dtos
@using HttpClients.ClientIntefaces
@using Microsoft.AspNetCore.Components
@inject NavigationManager navMgr;
@inject ICustomerService customerService;
<h3>CreateCustomer</h3>

<div class="container-fluid">
    <div class="row my-5">
        <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">
    

            <RadzenCard Class="my-3 rz-background-color-primary-lighter rz-shadow-0 rz-border-radius-0" style="margin: 0; padding: 2rem;">
                                    
                <div class="d-flex flex-row p-3">
                    <div>
                        <div class="row px-3">
                            <RadzenText TextStyle="TextStyle.H6" Class="d-flex mt-1 mb-0">FullName: </RadzenText>
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Default TextBox</RadzenText>
                             <RadzenTextBox Placeholder="Fullname" style="width: 50%;" Class="w-100" @bind-value="fullName" />
                            <RadzenText TextStyle="TextStyle.Body1"></RadzenText>
                        </div>
                        <div class="row px-3">
                            <RadzenText TextStyle="TextStyle.H6" Class="d-flex mt-3 mb-0">Phone: </RadzenText>
                            <RadzenTextBox Placeholder="Phone" style="width: 50%;" Class="w-100" @bind-value="phoneNo" />
                        </div>
                        <div class="row px-3">
                            <RadzenText TextStyle="TextStyle.H6" Class="d-flex mt-3 mb-0">Addresse: </RadzenText>
                            <RadzenTextBox Placeholder="Address" style="width: 50%;" Class="w-100" @bind-value="address" />
                        </div>
                        <div class="row px-3">
                            <RadzenText TextStyle="TextStyle.H6" Class="d-flex mt-3 mb-0">Mail: </RadzenText>
                            <RadzenTextBox Placeholder="Mail" style="width: 50%;" Class="w-100" @bind-Value="mail" />
                        </div>
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="col">
                        <RadzenButton style="width: 160px" Icon="save" BusyText="Creating ..." IsBusy=@addCustomerIsbusy Click=@CreateNewCustomer Text="Create"/>
                    </div>
                </div>
                
                
                <style>
                    .button-demo .rz-button {
                        margin: 0 0.5rem 1rem 0;
                    }
                    .button-demo h3 {
                        margin-bottom: 1rem;
                    }
                </style>
            </RadzenCard>
        </div>
    </div>
</div>



@code
{
    bool addCustomerIsbusy = false;
    string fullName { get; set; }
    string phoneNo { get; set; }
    string address { get; set; }
    string mail { get; set; }
    private string errorLabel;


    async Task CreateNewCustomer()
    {
        if (validatePhone().Equals(true) && validateFullName().Equals(true))
        {
            addCustomerIsbusy = true;
            await customerService.CreateCustomerAsync(new CustomerCreationDto(
                fullName, phoneNo, address,mail));
            navMgr.NavigateTo("/");
        }
        
    }
    
    public bool validateFullName()
    {
        if (string.IsNullOrEmpty(fullName)&& string.IsNullOrEmpty(address) && String.IsNullOrEmpty(mail))
        {
            return false;
        }
        char[] chars = fullName.ToCharArray();
        foreach (char c in chars)
        {
            if (!Char.IsLetter(c))
            {
               // exceptionLabel.set("only letters allowed");
                return false; 
            }
        }
        return true;
    }
    
    public bool validatePhone()
    {
        if (String.IsNullOrEmpty(phoneNo))
        {
            return false;
        }
        char[] chars = phoneNo.ToCharArray();
        foreach (char c in chars)
        {
            if (Char.IsLetter(c)&& chars.Length != 8)
            {
            // exceptionLabel.set("only letters allowed");
                return false; 
            }
        }
        return true;
    }
    
    
}
