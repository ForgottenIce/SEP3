@page "/AddProduct"
@using HttpClients.ClientIntefaces;
@using global::Shared.Dtos
@using Microsoft.AspNetCore.Components
@using Radzen
@inject NavigationManager navMgr
@inject IProductService productService

<div class="container p-4">
    <div class="row">
        <div class="col-3">
            <h6 class="text-uppercase">Tilføj produkt</h6>
        </div>
    </div>
</div>

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>


<RadzenFieldset Text="Opret nyt produkt">
    <div class="row">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Name"/>
        </div>
        <div class="col-4">
            <RadzenTextBox Placeholder="Name" style="width: 50%;" @bind-Value="ProductName"/>
        </div>
    </div>

    <div class="row" style="margin-top: 20px">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Description"/>
        </div>
        <div class="col-4">
            <RadzenTextArea Placeholder="Description" style="width: 100%;" @bind-Value="ProductDescription"/>
        </div>
    </div>
    <div class="row" style="margin-top: 20px">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Price"/>
        </div>
        <div class="col-4">
            <RadzenNumeric ShowUpDown="false" TValue="double" Class="w-50" @bind-Value="ProductPrice"/>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col">
            <RadzenButton style="width: 160px" Icon="save" BusyText="Saving ..." IsBusy=@addProductIsbusy Click=@CreateProduct Text="Save"/>
        </div>
    </div>

    <style>
                .button-demo .rz-button {
                    margin: 0 0.5rem 1rem 0;
                }
                .button-demo h3 {
                    margin-bottom: 1rem;
                }
            </style>


</RadzenFieldset>
@*
<h3>Overskriv position</h3>

<RadzenFieldset Text="Opret nyt produkt">
<div class="row">
    <div class="align-items-center d-flex col-md-3">
        <RadzenLabel Text="lager positioner"/>
    </div>
    <div class="col-4">

        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Postioner</RadzenText>
        <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="w-100"
                        Placeholder="Select..." Data=@orders TextProperty="CompanyName"
                        ValueProperty="CustomerID" Change=@(args => OnChange(args, "DropDown with placeholder"))>
        </RadzenDropDown>
    </div>

    <div class="col-4">

        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Varenummer</RadzenText>
        <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="w-100"
                        Placeholder="Select..." Data=@orders TextProperty="CompanyName"
                        ValueProperty="CustomerID" Change=@(args => OnChange(args, "DropDown with placeholder"))>
        </RadzenDropDown>
    </div>
    <div class="row mb-4">
        <div class="col">
            <RadzenButton style="width: 160px" Icon="save" BusyText="Saving ..." IsBusy=@busy Click=@OnBusyClick Text="Save"/>
        </div>
    </div>
</div>
<style>
        .button-demo .rz-button {
            margin: 0 0.5rem 1rem 0;
        }
        .button-demo h3 {
            margin-bottom: 1rem;
        }
    </style>

</RadzenFieldset>*@


@code{

    bool addProductIsbusy = false;

    string ProductName { get; set; }
    string ProductDescription { get; set; }
    double ProductPrice { get; set; }

    async Task CreateProduct()
    {
        addProductIsbusy = true;
        await productService.CreateProductAsync(new ProductCreationDto(ProductName, ProductDescription, ProductPrice));
        navMgr.NavigateTo("/");
    }

}