@page "/CreateOrder"
@using Radzen
<h3>CreateOrder</h3>
<div class="container p-4">
    <div class="row">
        <div class="col-3">
            <h6 class="text-uppercase">CreateOrder</h6>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-3">

            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Default Numeric</RadzenText>
            <RadzenNumeric TValue="int" ShowUpDown="false" Change=@(args => OnChange(args, "Numeric")) Class="w-100"/>
        </div>
        <div class="col-3">

            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Placeholder</RadzenText>
            <RadzenTextBox Placeholder="Search..." Change=@(args => OnChange(args, "TextBox with placeholder")) Class="w-100"/>
        </div>

    </div>
    <div class=container-fluid style="margin-top: 20px; margin-left: 0px; padding-left: 0px">
        <div class="col-3" style="justify-content: center">
            <RadzenButton Shade="Shade.Darker" Text="Godkend" ButtonStyle="ButtonStyle.Success"/>

        </div>
    </div>
</div>


<div class="container-fluid">
    <h3 class="mt-4">Render Fragment as Empty Text</h3>
    <RadzenDataGrid TItem="Item">
        <EmptyTemplate>
            <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to display.</p>
        </EmptyTemplate>
        <Columns>

            <RadzenDataGridColumn TItem="Item" Property="Amount" Title="mængde"/>
            <RadzenDataGridColumn TItem="Item" Property="ItemID" Title="varenummer"/>


        </Columns>
    </RadzenDataGrid>
    <div class="row mb-4">
        <div class="col">
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3">Busy Indicator</RadzenText>

            <RadzenButton style="width: 160px" Icon="save" BusyText="Saving ..." IsBusy=@busy Click=@OnBusyClick Text="Save"/>
        </div>
    </div>
</div>
<style>
                    .button-demo .rz-button {
                        margin: 0 0.5rem 1rem 0;
                    }
                    .button-demo h3 {
                        margin-bottom: 1rem;
                    }
                </style>




@code {

    // btn logic 

    bool busy;

    void OnClick(string buttonName)
    {
    }


    async Task OnBusyClick()
    {
        busy = true;
        await Task.Delay(2000);
        busy = false;
    }


    private void OnChange(string args, string textboxWithPlaceholder)
    {
        throw new NotImplementedException();
    }

    private int value;

    private void OnChange(int args, string textboxWithPlaceholder)
    {
        throw new NotImplementedException();
    }

    public class Item
    {
        string itemNumber;

        public Item(string itemNumber)
        {
            this.itemNumber = itemNumber;
        }
    }





}